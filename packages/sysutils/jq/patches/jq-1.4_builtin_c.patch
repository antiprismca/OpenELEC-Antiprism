--- jq-1.4/builtin.c-orig	2014-08-17 19:00:25.771132464 -0400
+++ jq-1.4.patch/builtin.c	2014-08-17 19:01:47.691130907 -0400
@@ -2,6 +2,8 @@
 #include <stdlib.h>
 #include <string.h>
 #include <assert.h>
+#include <openssl/evp.h>
+#include <openssl/sha.h>
 #include "builtin.h"
 #include "compile.h"
 #include "jq_parser.h"
@@ -71,6 +73,29 @@
   return ret;
 }
 
+static char hexchars[] = "0123456789abcdef";
+static jv f_sha1(jv a) {
+  unsigned i;
+  if (jv_get_kind(a) != JV_KIND_STRING) {
+    return type_error(a, "must be a string");
+  }
+  const char *astr = jv_string_value(a);
+  size_t len = jv_string_length_bytes(jv_copy(a));
+  unsigned char hashbuf[20];
+  char hashbuf_str[2*sizeof hashbuf + 1];
+
+  SHA1((const unsigned char *)astr, len, hashbuf);
+
+  for (i = 0; i < sizeof hashbuf; i++) {
+    hashbuf_str[2*i] = hexchars[hashbuf[i] >> 4];
+    hashbuf_str[2*i + 1] = hexchars[hashbuf[i] & 0xf];
+  }
+  jv ret = jv_string_sized(hashbuf_str, sizeof hashbuf * 2);
+
+  jv_free(a);
+  return ret;
+}
+
 static jv f_startswith(jv a, jv b) {
   int alen = jv_string_length_bytes(jv_copy(a));
   int blen = jv_string_length_bytes(jv_copy(b));
@@ -591,6 +616,7 @@
   {(cfunction_ptr)f_tonumber, "tonumber", 1},
   {(cfunction_ptr)f_tostring, "tostring", 1},
   {(cfunction_ptr)f_keys, "keys", 1},
+  {(cfunction_ptr)f_sha1, "sha1", 1},
   {(cfunction_ptr)f_startswith, "startswith", 2},
   {(cfunction_ptr)f_endswith, "endswith", 2},
   {(cfunction_ptr)f_ltrimstr, "ltrimstr", 2},
